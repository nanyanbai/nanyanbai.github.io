<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>岩柏</title>
  
  <subtitle>从不羡慕别人的优秀，因为相信自己也可以优秀。闲下来时看看书，书本里的故事，总有你学到的人生。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://nanyanbai.github.io/"/>
  <updated>2019-10-14T06:49:06.847Z</updated>
  <id>http://nanyanbai.github.io/</id>
  
  <author>
    <name>岩柏</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux从入门到精通配套笔记</title>
    <link href="http://nanyanbai.github.io/2019/10/14/linux%E5%85%A5%E9%97%A8/"/>
    <id>http://nanyanbai.github.io/2019/10/14/linux入门/</id>
    <published>2019-10-14T02:15:30.000Z</published>
    <updated>2019-10-14T06:49:06.847Z</updated>
    
    <content type="html"><![CDATA[<p>一.linux操作基本快捷键<br> 1.history –&gt;查看用户之前操作过的一些命令<br> 2.Ctrl+p –&gt; 比如你写的一个命令很长，记不住，可以用这个命令向上查看<br> 3.Ctrl+b –&gt; 是让光标向前移动（左移动一个字母）<br> 4.Ctrl+f –&gt; 是让光标向后移动（右移动一个字母）<br> 5.Ctrl+a –&gt; 光标移到行首<br> 6.Ctrl+e –&gt; 光标移到行尾<br> 7.Ctrl+c –&gt; 杀死当前进程<br> 8.Ctrl+L –&gt; 清屏，相当于clear<br> 9.pwd –&gt;查看当前在那个目录下<br> 10.mkdir –&gt; 创建一个目录 mkdir 后面跟要创建的文件名<br>  注意：<br>    在创建一个目录后，如果还想在它的目录下在创建下级目录，不能用<br>    mkdir/test1/test2/test3 的方式创建目录的。</p><p><strong>mkdir 创建文件目录</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir  files</span><br></pre></td></tr></table></figure><p><strong>touch 创建文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch  index.html</span><br></pre></td></tr></table></figure><p><strong>rmdir 删除目录</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmdir  files</span><br></pre></td></tr></table></figure><p>注意：rmdir只能删除空目录，如果目录里面有文件，那么删除失败</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">=============================================================================</span><br><span class="line">Linux命令复习和练习：</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">linux命令格式：</span><br><span class="line">command [-options] [parameter1] [parameter2] ...</span><br><span class="line">命令     选项       参数</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line">ls /    命令+参数</span><br><span class="line">ls -a   命令+选项</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">　　　　1.若有多个选项，选项没有先后顺序，且选项可以合并。</span><br><span class="line">　　　　2.选项和参数可以互换位置。</span><br><span class="line"></span><br><span class="line">touch .b.txt    创建一个隐藏文件b.txt</span><br><span class="line">touch a.txt     创建一个文件为a.txt</span><br><span class="line">mkdir aa        创建一个文件夹为aa        </span><br><span class="line">clear           清屏</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">ls -a           查看隐藏文件， 但是会多出俩个点，第一个是 &quot;.&quot;，第二个是 &quot;..&quot;。一个.是当前目录，两个.是上一层目录。</span><br><span class="line">ls -a           不隐藏任何以.字符开始的项目</span><br><span class="line">ls -A           列出除了.及..以外的任何项目</span><br><span class="line"></span><br><span class="line">ls              显示当前下面的文件及文件夹</span><br><span class="line">ls -a           显示当前目录下的所有文件及文件夹包括隐藏的.和..</span><br><span class="line">ls -al          显示当前目录下的所有文件及文件夹包括隐藏的.和..并显示详细信息，详细信息包括大小、属组、创建时间。</span><br><span class="line">ls -al          等价于    ll</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">man = manual    手册</span><br><span class="line">ls --help       法一：查看帮助文档</span><br><span class="line">man ls          法二：查看帮助文档</span><br><span class="line"></span><br><span class="line">cat a.txt       查看文件a.txt中的内容(打印出来)</span><br><span class="line">gedit a.txt     编辑文件a.txt</span><br><span class="line"></span><br><span class="line">history         查看执行过的命令</span><br><span class="line">!666            叹号加数字可以执行对应的命令</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">cd -            快速回到上一次路径</span><br><span class="line">cd ~            回到家目录</span><br><span class="line">cd ~ 等价于 cd </span><br><span class="line"></span><br><span class="line">tree            以目录树的方式显示该目录下的所有内容</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">mkdir A/B/C/D -p    在B文件夹下创建C文件夹，再在C文件夹下创建D文件夹(前提是C文件夹不存在)</span><br><span class="line">rmdir A             删除A文件夹(A文件夹中没有内容)</span><br><span class="line">rm -r B             删除B文件夹(B文件夹中有内容)</span><br><span class="line">rm a.txt            删除a.txt文件</span><br><span class="line"></span><br><span class="line">mv a.txt b.c        把文件a.txt改名为b.c</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">ln -s a.txt a-softlink.txt        创建文件a.txt的快捷方式为a-softlink.txt(软链接)</span><br><span class="line">ln b.txt b-hardlink.txt           创建文件b.txt的快捷方式为b-hardlink.txt(硬链接)</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">grep命令是在文件里面按照内容进行查找</span><br><span class="line">grep -n &quot;haha&quot; a.txt             在文件a.txt中搜索含有&quot;haha&quot;的内容，并显示所在的行号。</span><br><span class="line">grep -n &quot;^haha&quot; a.txt            在文件a.txt中搜索含有&quot;haha&quot;的内容，并显示所在的行号，必须以&quot;haha&quot;开头的。</span><br><span class="line">grep -n &quot;haha$&quot; a.txt            在文件a.txt中搜索含有&quot;haha&quot;的内容，并显示所在的行号，必须以&quot;haha&quot;结尾的。</span><br><span class="line">grep -v &quot;haha&quot; a.txt             在文件a.txt中搜索不含有&quot;haha&quot;的内容</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">find命令是在特定的文件夹下搜索符合条件的文件</span><br><span class="line">find / -name &quot;*name*&quot;             在根目录下以文件名进行搜索，条件是文件名只要里面含有name就行。</span><br><span class="line">sudo find / -name &quot;*name*&quot;        加上权限。</span><br><span class="line">sudo find ./ -name test.sh        查找当前目录下文件名为test.sh的文件。</span><br><span class="line">sudo find ./ -size 2M             查找当前目录下等于2M的文件。    </span><br><span class="line">sudo find ./ -size +2M            查找当前目录下大于2M的文件。</span><br><span class="line">sudo find ./ -size -2M            查找当前目录下小于2M的文件。</span><br><span class="line">sudo find ./ -size 2M size 5M     查找当前目录下大于2M，小于5M的文件。</span><br><span class="line">sudo find ./ -perm 777            查找当前目录下权限为777的文件或者文件夹。</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">tar是Unix/Linux中最常用的备份工具，该命令可以把一系列文档归档到一个大文件中，也可以把档案文件解开以恢复数据。</span><br><span class="line"></span><br><span class="line">tar -cvf test.tar a.c b.txt c.py        把a.c、b.txt和c.py文件打包在文件test.tar中(注意打的包没有压缩)</span><br><span class="line">tar -xvf test.tar                       把文件test.tar进行解包</span><br><span class="line"></span><br><span class="line">tar -zcvf test.tar.gz a.c b.txt c.py    把a.c、b.txt和c.py文件打包压缩在文件test.tar.gz中(注意打的包压缩了)    </span><br><span class="line">tar -zxvf test.tar.gz                   把文件test.tar.gz进行解压缩(解压缩在当前目录中)</span><br><span class="line">tar -zxvf test.tar.gz -C dongge/        把文件test.tar.gz进行解压缩到指定目录dongge中</span><br><span class="line"></span><br><span class="line">tar -jcvf test.tar.bz2 a.c b.txt c.py   把a.c、b.txt和c.py文件打包压缩在文件test.tar.bz2中(注意打的包压缩了)    </span><br><span class="line">tar -jxvf test.tar.bz2                  把文件test.tar.gz.bz2进行解压缩</span><br><span class="line"></span><br><span class="line">zip test.zip a.c b.txt c.py             把a.c、b.txt和c.py文件打包压缩在文件test.zip中(注意打的包压缩了)</span><br><span class="line">unzip test.zip                          把文件test.zip进行解压缩(解压缩在当前目录中)</span><br><span class="line">unzip -d ./mytest test.zip              把文件test.zip进行解压缩到指定目录中</span><br><span class="line"></span><br><span class="line">注意：Linux中，用什么格式进行压缩就用什么格式就行解压缩。</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">which查看我用的命令是哪个路径下的文件。</span><br><span class="line">例如：</span><br><span class="line">chen@ubuntu:~$ which ls</span><br><span class="line">/bin/ls</span><br><span class="line">chen@ubuntu:~$ </span><br><span class="line"></span><br><span class="line">进程是一个具有一定独立功能的程序，它是操作系统动态执行的基本单元。</span><br><span class="line">ps命令可以查看进程的详细情况。</span><br><span class="line"></span><br><span class="line">ps -aux</span><br><span class="line">top             用来显示系统中正在运行的进程的实时状态，它显示了一些非常有用的信息，比如 CPU 利用情况、内存消耗情况，以及每个进程情况等</span><br><span class="line">htop            它类似于 top 命令，但可以让你在垂直和水平方向上滚动，所以你可以看到系统上运行的所有进程，以及他们完整的命令行。</span><br><span class="line">kill -9 端口号   强制杀死某进程。</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">df -h　　        用于显示整个磁盘内存使用情况</span><br><span class="line">du -h　　        用于显示当前路径内存使用情况</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">sudo passwd 用户名            设置用户密码</span><br><span class="line">cat /etc/passwd              查看最后一行是否有新创建的用户的信息，有则创建用户成功；没有则创建失败。</span><br><span class="line">whoami                       查看当前登录用户是谁</span><br><span class="line">who                          查看当前登录用户都有谁</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">ssh chen@192.168.40.134      在一台ubuntu系统远程访问另一台ubuntu系统</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">在ubuntu的一个终端窗口里面按 ctrl + Shift + T 可以打开一个新的终端标签，这样一个窗口就有了两个终端标签。</span><br><span class="line">Alt + 1 或 Alt + 2 切换终端标签。</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">sudo是Ubuntu平台下允许系统管理员让普通用户执行一些或者全部root命令的一个工具，减少了root用户的的登录和管理时间，提高了安全性。</span><br><span class="line">sudo -s                  切换到root用户</span><br><span class="line"></span><br><span class="line">sudo groupadd yyy        创建一个组</span><br><span class="line">cat /etc/group           查看创建的组</span><br><span class="line">sudo groupdel yyy        删除一个组</span><br><span class="line">groupmod 三次Tab键        显示所有的组</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">chgrp yyy a.txt          修改文件的用户组</span><br><span class="line">chown chen a.txt         修改文件的文件拥有者</span><br><span class="line">=============================================================================</span><br></pre></td></tr></table></figure><p><strong>处理目录的常用命令</strong></p><p>ls: 列出目录/文件属性</p><p>cd：切换目录</p><p>pwd：查看当前工作目录</p><p>touch：创建新文件，或者更新文件的时间戳</p><p>mkdir：创建新的目录</p><p>rmdir：删除空的目录</p><p>du：评估目录与文件大小</p><p>cp:复制文件或目录</p><p>rm: 移除文件或目录</p><p>mv: 移动文件与目录，或修改文件与目录的名称</p><p>ln：创建连接文件（软连接，相当于快捷方式）</p><p>alias：设置命令的别名</p><p>unalias：取消别名</p><p>cat： 由第一行开始显示文件内容</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一.linux操作基本快捷键&lt;br&gt; 1.history –&amp;gt;查看用户之前操作过的一些命令&lt;br&gt; 2.Ctrl+p –&amp;gt; 比如你写的一个命令很长，记不住，可以用这个命令向上查看&lt;br&gt; 3.Ctrl+b –&amp;gt; 是让光标向前移动（左移动一个字母）&lt;br&gt; 
      
    
    </summary>
    
    
      <category term="linux" scheme="http://nanyanbai.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="http://nanyanbai.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Git学习知识归纳</title>
    <link href="http://nanyanbai.github.io/2019/10/12/git/"/>
    <id>http://nanyanbai.github.io/2019/10/12/git/</id>
    <published>2019-10-12T07:46:10.000Z</published>
    <updated>2019-10-14T06:43:25.545Z</updated>
    
    <content type="html"><![CDATA[<hr><blockquote><h1 id="盛年不重来，一日难再晨。及时当勉励，岁月不待人"><a href="#盛年不重来，一日难再晨。及时当勉励，岁月不待人" class="headerlink" title="盛年不重来，一日难再晨。及时当勉励，岁月不待人"></a>盛年不重来，一日难再晨。及时当勉励，岁月不待人</h1></blockquote><h2 id="Git三个区"><a href="#Git三个区" class="headerlink" title="Git三个区"></a>Git三个区</h2><ul><li>工作区：我们书写代码的地方，工作的目录就叫工作区</li><li>暂存区：暂时存储的区域，在git中，代码无法直接从工作区提交到仓库区，而是需要先从工作区添加到暂存区，然后才能从暂存区提交到仓库区。 暂存区的目的就是避免误操作</li><li>本地仓库区：将保持在暂存区域的内容永久转储到Git仓库中，生成版本号。生成版本号之后，就可以任何的回退到某一个具体的版本</li></ul><h2 id="Git命令操作"><a href="#Git命令操作" class="headerlink" title="Git命令操作"></a>Git命令操作</h2><ol><li><p>本地库初始化</p><ul><li><p>首先用cd的方式进入工作目录下</p></li><li><p>然后创建一个项目名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir  demoProject</span><br></pre></td></tr></table></figure></li><li><p>比如我们现在创建的demoProject是项目名称，要切换到项目根目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd demoProject</span><br></pre></td></tr></table></figure></li><li><p>对本地项目进行git的初始化, 把这个目录变成Git可以管理的仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  init</span><br></pre></td></tr></table></figure></li><li><p>如何查看被隐藏的文件呢? 使用以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lA</span><br></pre></td></tr></table></figure></li></ul><blockquote><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><ul><li>瞬间Git就把仓库建好了，而且告诉你是一个空的仓库，可以在当前目录下多了一个.git的目录，这个目录是Git来跟踪管理版本库的，对.git这个文件不能删除，也要胡乱修改。</li><li>如果没有看到.git这个目录， 不要慌张，那是因为这个目录默认是隐藏的</li></ul></blockquote></li></ol><ol start="2"><li><p>设置签名</p><ul><li><p>形式<br>用户名： test<br>Email地址：<a href="mailto:test@gmail.com" target="_blank" rel="noopener">test@gmail.com</a></p></li><li><p>作用： 区分不同开发人员的身份</p></li><li><p>辨析：这里设置的签名和登录远程库（代码托管中心）的账号，密码没有任何关系</p></li><li><p>命令<br>项目级别/仓库级别：仅在当前本地库范围内有效<br>git config user.name  test_pro<br>git config user.email <a href="mailto:test_pro@gmail.com" target="_blank" rel="noopener">test_pro@gmail.com</a><br>信息保存位置：./git/config文件<br>查看命令：cat .git/config<br>系统用户级别： 登录当前操作系统的用户范围<br>git  config –global user.anme_glb<br>git config –global  user.email <a href="mailto:test_glb@gmail.com" target="_blank" rel="noopener">test_glb@gmail.com</a><br>级别优先级：<br>（1）就近原则：项目级别优先于系统用户级别，二者都有时采用项目级别的签名<br>（2）如果只有系统级别的签名，就以系统用户级别的签名为准<br>（3）二者都没有不允许</p></li></ul></li></ol><blockquote><p>查看被隐藏的所有文件命令：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lA|less</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="想要让git对一个目录进行版本控制需要以下步骤："><a href="#想要让git对一个目录进行版本控制需要以下步骤：" class="headerlink" title="想要让git对一个目录进行版本控制需要以下步骤："></a>想要让git对一个目录进行版本控制需要以下步骤：</h2><h3 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h3><ul><li><p>进入要管理的文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 文件夹</span><br></pre></td></tr></table></figure></li><li><p>执行初始化操作命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li><li><p>管理目录下的文件状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">注：新增的文件和修改过后的文件都是红色</span><br></pre></td></tr></table></figure></li><li><p>管理指定文件（红变绿）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git  add  文件名</span><br><span class="line">git add .</span><br><span class="line">注：git  add .  是提交所有的文件</span><br></pre></td></tr></table></figure></li><li><p>个人信息配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config user.name   git_user</span><br><span class="line">git config user.email  git_user@qq.com</span><br><span class="line">注：只对本地库范围内有效</span><br></pre></td></tr></table></figure></li><li><p>生成版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  commit -m &apos;提交或者修改的描述信息&apos;</span><br></pre></td></tr></table></figure></li><li><p>查看版本记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  log</span><br></pre></td></tr></table></figure></li></ul><h3 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h3><ul><li><p>回滚之前的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git  log   (查看记录)</span><br><span class="line">git  reset  --hard  版本号</span><br></pre></td></tr></table></figure></li><li><p>回滚之之后的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reflog </span><br><span class="line">git reset  --hard  版本号</span><br></pre></td></tr></table></figure></li></ul><h3 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h3><ul><li><p>查看分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  branch</span><br></pre></td></tr></table></figure></li><li><p>创建分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  branch  分支名称</span><br></pre></td></tr></table></figure></li><li><p>删除分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  branch  -d  分支名称</span><br></pre></td></tr></table></figure></li><li><p>切换分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  checkout 分支名</span><br></pre></td></tr></table></figure></li><li><p>分支合并（可能会产生冲突）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git merge  要合并的分支</span><br><span class="line">注：切换分支再合并, 是谁合并到谁，一定要注意</span><br></pre></td></tr></table></figure></li></ul><h3 id="第四阶段"><a href="#第四阶段" class="headerlink" title="第四阶段"></a>第四阶段</h3><ul><li><p>给远程仓库起别名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  remote  add orign  远程仓库地址</span><br></pre></td></tr></table></figure></li><li><p>向远程推送代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  push -u origin  分支</span><br></pre></td></tr></table></figure></li></ul><h3 id="第五阶段"><a href="#第五阶段" class="headerlink" title="第五阶段"></a>第五阶段</h3><ul><li><p>克隆远程仓库代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git  clone  远程仓库地址</span><br><span class="line">注： 这个是把所有分支的代码都拉取下来了， 如果你想切换分支就使用命令： git  checkout 分支名</span><br></pre></td></tr></table></figure></li><li><p>拉取代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  pull  origin  dev</span><br></pre></td></tr></table></figure></li></ul><p>​    </p><p>​    </p><p>​     </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;blockquote&gt;
&lt;h1 id=&quot;盛年不重来，一日难再晨。及时当勉励，岁月不待人&quot;&gt;&lt;a href=&quot;#盛年不重来，一日难再晨。及时当勉励，岁月不待人&quot; class=&quot;headerlink&quot; title=&quot;盛年不重来，一日难再晨。及时当勉励，岁月不待人&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="Git" scheme="http://nanyanbai.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="http://nanyanbai.github.io/tags/Git/"/>
    
  </entry>
  
</feed>
